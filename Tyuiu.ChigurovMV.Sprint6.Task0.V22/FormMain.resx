<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxFormula_CMV.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZQAAAABJRU5ErkJggg==
</value>
  </data>
</root>